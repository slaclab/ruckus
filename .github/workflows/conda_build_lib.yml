# ----------------------------------------------------------------------------
# Title      : Ruckus GitHub Actions CI Script
# ----------------------------------------------------------------------------
# This file is part of the 'Ruckus Package'. It is subject to
# the license terms in the LICENSE.txt file found in the top-level directory
# of this distribution and at:
#    https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html.
# No part of the 'Ruckus Package', including this file, may be
# copied, modified, propagated, or distributed except according to the terms
# contained in the LICENSE.txt file.
# ----------------------------------------------------------------------------

name: Anaconda Build for a Library

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      CONDA_UPLOAD_TOKEN_TAG:
        required: true


jobs:
  conda_build_lib:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os:
          - ubuntu-24.04
    runs-on: ${{ matrix.os }}
    steps:

      # This step checks out a copy of your repository.
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Setup anaconda
        env:
          OS_NAME: ${{ matrix.os }}
        run: |
          cd ${HOME}
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
          bash miniconda.sh -b -p ${HOME}/miniconda
          export PATH="${HOME}/miniconda/bin:$PATH"
          source ${HOME}/miniconda/etc/profile.d/conda.sh
          conda config --set always_yes yes
          conda config --set channel_priority strict
          conda install -n base conda-libmamba-solver
          conda config --set solver libmamba
          conda install conda-build anaconda-client
          conda update -q conda conda-build
          conda update --all

      - name: Get Image Information
        id: get_image_info
        env:
          CONDA_UPLOAD_TOKEN_TAG: ${{ secrets.CONDA_UPLOAD_TOKEN_TAG }}
          OS_NAME: ${{ matrix.os }}
        run: |
          echo "token=$CONDA_UPLOAD_TOKEN_TAG" >> $GITHUB_OUTPUT
          echo "os=linux-64" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          export PATH="${HOME}/miniconda/bin:$PATH"
          source ${HOME}/miniconda/etc/profile.d/conda.sh
          conda build conda-recipe --output-folder bld-dir -c tidair-tag -c conda-forge

      - name: Upload
        run: |
          export PATH="${HOME}/miniconda/bin:$PATH"
          source ${HOME}/miniconda/etc/profile.d/conda.sh
          anaconda -t ${{ steps.get_image_info.outputs.token }} upload --force bld-dir/*/*.conda
